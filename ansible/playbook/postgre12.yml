---
- hosts: db
  become: yes

  vars_files:
    - vars.yml

  tasks:
    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400

    - name: "Install packages"
      ansible.builtin.apt:
        pkg:
        - postgresql
        - postgresql-contrib

    - name: "Install Python Pip3"
      ansible.builtin.apt:
        pkg:
        - python3-pip

    - name: "Install Python packages"
      ansible.builtin.pip:
        name: psycopg2-binary


    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: "/etc/postgresql/12/main/pg_hba.conf"
      register: postgres_data

    - name: "Start and enable services"
      service: "name={{ item }} state=started enabled=yes"
      with_items:
        - postgresql

    - name: "Create app database"
      postgresql_db:
        state: present
        name: "{{ db_name }}"
      become: yes
      become_user: postgres

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
      become: yes
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: "Allow md5 connection for the db user"
      community.postgresql.postgresql_pg_hba:
        dest: "/etc/postgresql/12/main/pg_hba.conf"
        contype: host
        databases: all
        users: all
        method: md5
        source: all
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres

    - name: "Uncomment the line /etc/postgresql/12/main/postgresql.conf"
      replace:
        path: "/etc/postgresql/12/main/postgresql.conf"
        regexp: "#listen_addresses = 'localhost'"
        replace: "listen_addresses = '*'"
      notify: restart postgres

  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted
